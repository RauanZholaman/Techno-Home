// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Techno_Home.Data;

#nullable disable

namespace Techno_Home.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20250807180952_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Techno_Home.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__23CAF1F8A0BFAAFB");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Techno_Home.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("Customer")
                        .HasColumnType("int")
                        .HasColumnName("customer");

                    b.Property<int?>("PostCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Suburb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF1B12E68C");

                    b.HasIndex("Customer");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Techno_Home.Models.Patron", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HashedPw")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("HashedPW");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Salt")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.HasKey("UserId")
                        .HasName("PK__Patrons__1788CCAC2DF458CF");

                    b.ToTable("Patrons");
                });

            modelBuilder.Entity("Techno_Home.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("BrandName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly?>("Released")
                        .HasColumnType("date");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("SubCategoryID");

                    b.HasKey("Id")
                        .HasName("PK__Product__3214EC2792542439");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LastUpdatedBy");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Techno_Home.Models.ProductsInOrder", b =>
                {
                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInOrders");
                });

            modelBuilder.Entity("Techno_Home.Models.Source", b =>
                {
                    b.Property<int>("Sourceid")
                        .HasColumnType("int")
                        .HasColumnName("sourceid");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("ExternalLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("externalLink");

                    b.Property<string>("SourceName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Source_name");

                    b.HasKey("Sourceid")
                        .HasName("PK__Source__5ABF0FB8217B99A7");

                    b.HasIndex("CategoryId");

                    b.ToTable("Source", (string)null);
                });

            modelBuilder.Entity("Techno_Home.Models.Stocktake", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.HasKey("ItemId")
                        .HasName("PK__Stocktak__727E838BDF0BC290");

                    b.HasIndex("ProductId");

                    b.HasIndex("SourceId");

                    b.ToTable("Stocktake", (string)null);
                });

            modelBuilder.Entity("Techno_Home.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("SubCategoryID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubCategoryId")
                        .HasName("PK__SubCateg__26BE5BF9CF19DD0C");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory", (string)null);
                });

            modelBuilder.Entity("Techno_Home.Models.To", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Cvv")
                        .HasColumnType("int")
                        .HasColumnName("CVV");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Expiry")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("PatronId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PostCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Suburb")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId")
                        .HasName("PK__TO__B611CB9DC15F216C");

                    b.HasIndex("PatronId");

                    b.ToTable("TO", (string)null);
                });

            modelBuilder.Entity("Techno_Home.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HashedPw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C3AA39A38");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105345770D551")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Techno_Home.Models.Order", b =>
                {
                    b.HasOne("Techno_Home.Models.To", "CustomerNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Customer")
                        .HasConstraintName("FK__Orders__customer__47DBAE45");

                    b.Navigation("CustomerNavigation");
                });

            modelBuilder.Entity("Techno_Home.Models.Product", b =>
                {
                    b.HasOne("Techno_Home.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Categor__4316F928");

                    b.HasOne("Techno_Home.Models.User", "LastUpdatedByNavigation")
                        .WithMany("Products")
                        .HasForeignKey("LastUpdatedBy");

                    b.HasOne("Techno_Home.Models.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .HasConstraintName("FK__Product__SubCate__440B1D61");

                    b.Navigation("Category");

                    b.Navigation("LastUpdatedByNavigation");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Techno_Home.Models.ProductsInOrder", b =>
                {
                    b.HasOne("Techno_Home.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__ProductsI__Order__5070F446");

                    b.HasOne("Techno_Home.Models.Stocktake", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductsI__Produ__5165187F");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Techno_Home.Models.Source", b =>
                {
                    b.HasOne("Techno_Home.Models.Category", "Category")
                        .WithMany("Sources")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Source__Category__4AB81AF0");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Techno_Home.Models.Stocktake", b =>
                {
                    b.HasOne("Techno_Home.Models.Product", "Product")
                        .WithMany("Stocktakes")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Stocktake__Produ__4E88ABD4");

                    b.HasOne("Techno_Home.Models.Source", "Source")
                        .WithMany("Stocktakes")
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK__Stocktake__Sourc__4D94879B");

                    b.Navigation("Product");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("Techno_Home.Models.SubCategory", b =>
                {
                    b.HasOne("Techno_Home.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__SubCatego__Categ__398D8EEE");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Techno_Home.Models.To", b =>
                {
                    b.HasOne("Techno_Home.Models.Patron", "Patron")
                        .WithMany("Tos")
                        .HasForeignKey("PatronId")
                        .HasConstraintName("FK__TO__PatronId__403A8C7D");

                    b.Navigation("Patron");
                });

            modelBuilder.Entity("Techno_Home.Models.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Sources");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Techno_Home.Models.Patron", b =>
                {
                    b.Navigation("Tos");
                });

            modelBuilder.Entity("Techno_Home.Models.Product", b =>
                {
                    b.Navigation("Stocktakes");
                });

            modelBuilder.Entity("Techno_Home.Models.Source", b =>
                {
                    b.Navigation("Stocktakes");
                });

            modelBuilder.Entity("Techno_Home.Models.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Techno_Home.Models.To", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Techno_Home.Models.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
